{"version":3,"sources":["components/Header.js","components/Footer.js","components/MovieCard.js","constants/movieConstants.js","actions/movieActions.js","screens/MovieListScreen.js","constants/actorConstants.js","constants/producerConstants.js","components/Alert.js","components/Modal.js","actions/actorActions.js","actions/producerActions.js","components/MultiSelectComponent.js","screens/EditScreen.js","components/PersonCard.js","screens/ActorsListScreen.js","screens/ProducersListScreen.js","screens/MovieScreen.js","App.js","reportWebVitals.js","store.js","reducers/movieReducer.js","reducers/actorReducer.js","reducers/producerReducer.js","index.js"],"names":["Header","className","to","data-toggle","data-target","id","target","htmlFor","type","name","disabled","role","Footer","MovieCard","title","yearofrelease","producers","actors","poster","history","src","alt","style","height","objectFit","map","producer","actor","onClick","push","MOVIES_LIST_REQUEST","MOVIES_LIST_SUCCESS","MOVIES_LIST_FAILURE","GET_MOVIE_BY_ID_REQUEST","GET_MOVIE_BY_ID_SUCCESS","GET_MOVIE_BY_ID_FAILURE","UPDATE_MOVIE_REQUEST","UPDATE_MOVIE_SUCCESS","UPDATE_MOVIE_FAILURE","ADD_MOVIE_REQUEST","ADD_MOVIE_SUCCESS","ADD_MOVIE_FAILURE","getMovieById","dispatch","a","axios","get","data","payload","response","message","MovieListScreen","match","useDispatch","moviesList","useSelector","state","movies","useEffect","keyword","listMovies","movie","_id","ACTORS_LIST_REQUEST","ACTORS_LIST_SUCCESS","ACTORS_LIST_FAILURE","ACTORS_NAME_LIST_REQUEST","ACTORS_NAME_LIST_SUCCESS","ACTORS_NAME_LIST_FAILURE","CREATE_ACTOR_REQUEST","CREATE_ACTOR_SUCCESS","CREATE_ACTOR_FAILURE","ACTORS_NAME_APPEND","PRODUCERS_LIST_REQUEST","PRODUCERS_LIST_SUCCESS","PRODUCERS_LIST_FAILURE","PRODUCERS_NAME_LIST_REQUEST","PRODUCERS_NAME_LIST_SUCCESS","PRODUCERS_NAME_LIST_FAILURE","CREATE_PRODUCER_REQUEST","CREATE_PRODUCER_SUCCESS","CREATE_PRODUCER_FAILURE","PRODUCERS_NAME_APPEND","Alert","Modal","show","random","useState","setName","gender","setGender","bio","setBio","dob","setDob","formErrors","setFormErrors","buttonRef","React","useRef","current","click","tabindex","aria-labelledby","aria-hidden","data-dismiss","aria-label","onSubmit","e","preventDefault","errors","formIsValid","handleValidation","post","put","updated","updatedActor","updatedProducer","value","onChange","ref","MultiSelectComponent","options","selectedData","handleChange","d","label","labelledBy","EditScreen","currentMovie","completeActorsNames","actorsNameList","completeProducersNames","producersNameList","uploading","setUploading","setYearofrelease","plot","setPlot","setPoster","setActors","setProducers","setShow","setTitle","setRandom","modalClickHandler","Math","urlPrefix","allActorNames","allProducerNames","getAllProducersNames","params","uploadFileHandler","file","files","formData","FormData","append","config","headers","console","error","alert","window","location","pathname","createdMovie","addMovie","updatedMovie","updateMovie","class","list","PersonCard","input","length","substring","ActorsListScreen","actorsList","listActors","ProducersListScreen","producersList","listProducers","_key","MovieScreen","position","zIndex","width","border","marginTop","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","loading","newlyCreatedActor","newlyCreatedProducer","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"kNA8DeA,MA5Df,WACE,OACE,qBAAKC,UAAU,+DAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,eAAvB,wBAGA,yBACEE,cAAY,WACZF,UAAU,iBACVG,cAAY,YAHd,UAKE,sBAAMH,UAAU,UAAhB,+BACA,sBAAMA,UAAU,2BAElB,sBAAKA,UAAU,2BAA2BI,GAAG,WAA7C,UACE,qBAAIJ,UAAU,iBAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,WAAvB,sBAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,WAA7B,sBAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,WAAhC,4BAKJ,sBAAMA,UAAU,sBAAsBK,OAAO,QAA7C,SACE,sBAAKL,UAAU,aAAf,UACE,uBAAOM,QAAQ,eAAf,SACE,mBAAGN,UAAU,mBAEf,uBACEA,UAAU,4BACVO,KAAK,SACLH,GAAG,eACHI,KAAK,SACLC,UAAQ,SAId,cAAC,IAAD,CACER,GAAG,YACHD,UAAU,8BACVU,KAAK,SAHP,gCClCKC,EAdA,WACb,OACE,iCACE,qBAAKX,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,yDC4DKY,MA/Df,YAQI,IAPFR,EAOC,EAPDA,GACAS,EAMC,EANDA,MACAC,EAKC,EALDA,cACAC,EAIC,EAJDA,UACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,OACAC,EACC,EADDA,QAKA,OACE,qBAAKlB,UAAU,kCAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBACEA,UAAU,6BACVmB,IAAKF,EACLG,IAAI,eACJC,MAAO,CAAEC,OAAQ,QAASC,UAAW,WAEvC,sBAAKvB,UAAU,+BAAf,UACE,cAAC,IAAD,CAAMC,GAAE,iBAAYG,GAApB,SACE,oBAAIJ,UAAU,aAAd,SAA4Ba,GAAS,YAGvC,qBAAIb,UAAU,kBAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,iCACE,wDACCc,GAAiB,YAGtB,oBAAId,UAAU,2BAAd,SACE,iCACE,iDAA6B,IAC5Be,EACGA,EAAUS,KAAI,SAACC,GAAD,OAAcA,EAAW,OACvC,8BAGR,oBAAIzB,UAAU,2BAAd,SACE,iCACE,8CAA0B,IACzBgB,EACGA,EAAOQ,KAAI,SAACE,GAAD,OAAWA,EAAQ,OAC9B,2BAIV,wBACE1B,UAAU,0BACVO,KAAK,SACLoB,QA5CU,WAClBT,EAAQU,KAAR,qBAA2BxB,KAwCrB,2B,8CCrDGyB,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAoB,oBCsBpBC,EAAe,SAACrC,GAAD,8CAAQ,WAAOsC,GAAP,iBAAAC,EAAA,sEAEhCD,EAAS,CAAEnC,KAAMyB,IAFe,SAGTY,IAAMC,IAAN,wBAA2BzC,IAHlB,gBAGxB0C,EAHwB,EAGxBA,KACRJ,EAAS,CAAEnC,KAAM0B,EAAyBc,QAASD,IAJnB,gDAMhCJ,EAAS,CACPnC,KAAM2B,EACNa,QACE,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAClC,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAXkB,yDAAR,uDCIbC,MAhCf,YAA8C,IAAnBhC,EAAkB,EAAlBA,QACnBwB,GADqC,EAATS,MACjBC,eAEXC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOH,cAKvD,OAHAI,qBAAU,WACRf,EDKsB,eAACgB,EAAD,uDAAW,GAAX,8CAAkB,WAAOhB,GAAP,mBAAAC,EAAA,sEAExCD,EAAS,CAAEnC,KAAMsB,IAFuB,SAGjBe,IAAMC,IAAN,6BAAgCa,IAHf,gBAGhCZ,EAHgC,EAGhCA,KACAU,EAAWV,EAAXU,OACRd,EAAS,CAAEnC,KAAMuB,EAAqBiB,QAASS,IALP,kDAOxCd,EAAS,CACPnC,KAAMwB,EACNgB,QACE,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAClC,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAZ0B,0DAAlB,sDCLbU,CAAW,OACnB,CAACjB,EAAUxB,IAEZ,qBAAKlB,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACGqD,EAAW7B,KAAI,SAACoC,GACf,OACE,cAAC,EAAD,CAEExD,GAAIwD,EAAMC,IACVhD,MAAO+C,EAAMpD,KACbM,cAAe8C,EAAM9C,cACrBC,UAAW6C,EAAM7C,UACjBC,OAAQ4C,EAAM5C,OACdC,OAAQ2C,EAAM3C,OACdC,QAASA,GAPJ0C,EAAMC,e,OCpBdC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAA2B,2BAC3BC,EAA2B,2BAC3BC,EAA2B,2BAC3BC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAqB,qBCTrBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAwB,wBCKtBC,MAZf,YAA6B,IAAZjC,EAAW,EAAXA,QACf,OACE,mCACGA,GACC,qBAAKjD,UAAU,+BAA+BU,KAAK,QAAnD,SACGuC,OC4LIkC,OA1Lf,YAAiD,IAAD,IAA/BC,YAA+B,SAAjBvE,EAAiB,EAAjBA,MAAOwE,EAAU,EAAVA,OAC9B3C,EAAWU,cAD6B,EAGtBkC,mBAAS,IAHa,mBAGvC9E,EAHuC,KAGjC+E,EAHiC,OAIlBD,mBAAS,MAJS,mBAIvCE,EAJuC,KAI/BC,EAJ+B,OAKxBH,mBAAS,IALe,mBAKvCI,EALuC,KAKlCC,EALkC,OAMxBL,qBANwB,mBAMvCM,EANuC,KAMlCC,EANkC,OAOVP,mBAAS,IAPC,mBAOvCQ,EAPuC,KAO3BC,EAP2B,KAQxCC,EAAYC,IAAMC,OAAO,MAqE/B,OApEAzC,qBAAU,WACJ2B,GACFY,EAAUG,QAAQC,UAEnB,CAAChB,EAAMvE,EAAOwE,IAiEf,qCACE,qBACEjF,GAAG,UACHJ,UAAU,QACVqG,SAAS,KACT3F,KAAK,SACL4F,kBAAgB,eAChBC,cAAY,OANd,SAQE,qBAAKvG,UAAU,eAAeU,KAAK,WAAnC,SACE,sBAAKV,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAd,SAA6B,SAAWa,EAAQ,aAChD,wBACEN,KAAK,SACLP,UAAU,QACVwG,eAAa,QACbC,aAAW,QAJb,SAME,sBAAMF,cAAY,OAAlB,uBAGJ,qBAAKvG,UAAU,aAAf,SACE,uBAAM0G,SA9CC,SAACC,GAElB,GADAA,EAAEC,iBA1CqB,WACvB,IAAIC,EAAS,GACTC,GAAc,EAqClB,OAlCKtG,EAIiB,qBAATA,IACJA,EAAK2C,MAAM,qBACd2D,GAAc,EACdD,EAAM,KAAW,kBANrBC,GAAc,EACdD,EAAM,KAAW,mBAUdrB,IACHsB,GAAc,EACdD,EAAM,OAAa,0BAGhBnB,IACHoB,GAAc,EACdD,EAAM,IAAU,mBAGbjB,EAIgB,qBAARA,IACJA,EAAIzC,MA7BG,mRA8BV2D,GAAc,EACdD,EAAM,IAAU,wBANpBC,GAAc,EACdD,EAAM,IAAU,mBASlBd,EAAcc,GACPC,EAIHC,GAAoB,CACtB,IAAMjE,EAAO,CAAEtC,OAAMgF,SAAQI,MAAKF,OACrB,SAAT7E,IACF6B,GCtBoBhB,EDsBCoB,ECtBF,uCAAW,WAAOJ,GAAP,uBAAAC,EAAA,sEAElCD,EAAS,CAAEnC,KAAM6D,IAFiB,SAGbxB,IAAMoE,KAAK,eAHE,uBAG5BlE,EAH4B,EAG5BA,KACA1C,EAAK0C,EAAI,aAAJ,IAJuB,SAKdF,IAAMqE,IAAN,sBAAyB7G,GAAMsB,GALjB,OAK9BwF,EAL8B,OAMlCxE,EAAS,CAAEnC,KAAM8D,EAAsBtB,QAASmE,EAAQpE,OAClDtC,EAAO0G,EAAO,KACpBxE,EAAS,CAAEnC,KAAMgE,EAAoBxB,QAAS,CAACvC,EAAK2G,aAAa3G,QAR/B,kDAUlCkC,EAAS,CACPnC,KAAM+D,EACNvB,QACE,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAClC,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAfoB,0DAAX,wDDuBnBsC,EAAQ,IACRE,EAAU,MACVE,EAAO,IACPE,IACAG,EAAUG,QAAQC,SAEP,YAATvF,IACF6B,GE7BuBjB,EF6BCqB,EE7BF,uCAAc,WAAOJ,GAAP,uBAAAC,EAAA,sEAExCD,EAAS,CAAEnC,KAAMuE,IAFuB,SAGnBlC,IAAMoE,KAAK,kBAHQ,uBAGlClE,EAHkC,EAGlCA,KACA1C,EAAK0C,EAAI,gBAAJ,IAJ6B,SAKpBF,IAAMqE,IAAN,yBAA4B7G,GAAMqB,GALd,OAKpCyF,EALoC,OAMxCxE,EAAS,CAAEnC,KAAMwE,EAAyBhC,QAASmE,EAAQpE,OACrDtC,EAAO0G,EAAO,KACpBxE,EAAS,CACPnC,KAAM0E,EACNlC,QAAS,CAACvC,EAAK4G,gBAAgB5G,QAVO,kDAaxCkC,EAAS,CACPnC,KAAMyE,EACNjC,QACE,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAClC,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAlB0B,0DAAd,wDF8BtBsC,EAAQ,IACRE,EAAU,MACVE,EAAO,IACPE,IACAG,EAAUG,QAAQC,SElCI,IAAC3E,EDDHC,GD+Dd,UACE,sBAAK1B,UAAU,aAAf,UACE,gCACE,mCAAS,WAAaa,EAAtB,SAEF,uBACEb,UAAU,eACVO,KAAK,OACL8G,MAAO7G,EACP8G,SAAU,SAACX,GAAD,OAAOpB,EAAQoB,EAAEtG,OAAOgH,UAEpC,cAAC,EAAD,CAAOpE,QAAS6C,EAAU,UAE5B,sBAAK9F,UAAU,aAAf,UACE,gCACE,8CAEF,yBACEA,UAAU,2BACVyG,aAAW,yBACXY,MAAO7B,EACP8B,SAAU,SAACX,GAAD,OAAOlB,EAAUkB,EAAEtG,OAAOgH,QAJtC,UAME,2BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,sBAEF,cAAC,EAAD,CAAOpE,QAAS6C,EAAU,YAE5B,sBAAK9F,UAAU,aAAf,UACE,gCACE,qDAEF,uBACEA,UAAU,eACVO,KAAK,OACL8G,MAAOzB,EACP0B,SAAU,SAACX,GAAD,OAAOd,EAAOc,EAAEtG,OAAOgH,UAEnC,uBAAOrH,UAAU,uBAAjB,iCAGA,cAAC,EAAD,CAAOiD,QAAS6C,EAAU,SAE5B,sBAAK9F,UAAU,aAAf,UACE,gCACE,2CAEF,0BACEA,UAAU,eACVqH,MAAO3B,EACP4B,SAAU,SAACX,GAAD,OAAOhB,EAAOgB,EAAEtG,OAAOgH,UAEnC,cAAC,EAAD,CAAOpE,QAAS6C,EAAU,SAE5B,sBAAK9F,UAAU,eAAf,UACE,wBACEA,UAAU,gBACVO,KAAK,SACLiG,eAAa,QAHf,mBAOA,wBAAQjG,KAAK,SAASP,UAAU,kBAAhC,iCASZ,qBACEA,UAAU,yBACVE,cAAY,QACZC,cAAY,WACZoH,IAAKvB,EAJP,sB,SG7JSwB,OAvBf,YAAwE,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAarD,OAZAF,EAAUA,EAAQjG,KAAI,SAACoG,GACrB,MAAO,CAAEC,MAAOD,EAAGP,MAAOO,MAG5BF,EAAeA,EACXA,EAAalG,KAAI,SAACoG,GAChB,MAAO,CAAEC,MAAOD,EAAGP,MAAOO,MAE5B,GAKF,cAAC,KAAD,CACEH,QAASA,EACTJ,MAAOK,EACPJ,SAAUK,EACVG,WAAY,YCgSHC,OA3Sf,YAAyC,IAAD,EAAlB7G,EAAkB,EAAlBA,QAASiC,EAAS,EAATA,MACvBT,EAAWU,cAEX4E,EAAY,UAAG1E,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOwE,uBAAvC,QAAwD,IAEpEC,EAAsB3E,aAC1B,SAACC,GAAD,OAAWA,EAAMvC,OAAOkH,kBAEpBC,EAAyB7E,aAC7B,SAACC,GAAD,OAAWA,EAAMxC,UAAUqH,qBATS,EAYJ9C,oBAAS,GAZL,mBAY/B+C,EAZ+B,KAYpBC,EAZoB,OAcdhD,mBAAS,IAdK,mBAc/B9E,EAd+B,KAczB+E,EAdyB,OAeID,mBAAS,IAfb,mBAe/BxE,EAf+B,KAehByH,EAfgB,OAgBdjD,mBAAS,IAhBK,mBAgB/BkD,EAhB+B,KAgBzBC,EAhByB,OAiBVnD,mBAAS,IAjBC,mBAiB/BrE,EAjB+B,KAiBvByH,EAjBuB,OAkBVpD,mBAAS,IAlBC,mBAkB/BtE,EAlB+B,KAkBvB2H,EAlBuB,OAmBJrD,mBAAS,IAnBL,oBAmB/BvE,GAnB+B,MAmBpB6H,GAnBoB,SAqBdtD,oBAAS,GArBK,qBAqB/BF,GArB+B,MAqBzByD,GArByB,SAsBZvD,mBAAS,IAtBG,qBAsB/BzE,GAtB+B,MAsBxBiI,GAtBwB,SAuBVxD,mBAAS,GAvBC,qBAuB/BD,GAvB+B,MAuBvB0D,GAvBuB,SAyBFzD,mBAAS,IAzBP,qBAyB/BQ,GAzB+B,MAyBnBC,GAzBmB,MA0BhCiD,GAAoB,SAACzI,GACzBwI,GAAUE,KAAK5D,UACfwD,IAAQ,GACRC,GAASvI,IAEXkD,qBAAU,WHXqB,IAACyF,EGY9BxG,GHZ8BwG,EGYH,MHZE,uCAAe,WAAOxG,GAAP,mBAAAC,EAAA,sEAE5CD,EAAS,CAAEnC,KAAM0D,IAF2B,SAGrBrB,IAAMC,IAAN,UAAaqG,EAAb,wBAHqB,gBAGpCpG,EAHoC,EAGpCA,KACAqG,EAAkBrG,EAAlBqG,cACRzG,EAAS,CAAEnC,KAAM2D,EAA0BnB,QAASoG,IALR,kDAO5CzG,EAAS,CACPnC,KAAM4D,EACNpB,QACE,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAClC,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAZ8B,0DAAf,wDGa7BP,EFZgC,SAACwG,GAAD,8CAAe,WAAOxG,GAAP,mBAAAC,EAAA,sEAE/CD,EAAS,CAAEnC,KAAMoE,IAF8B,SAGxB/B,IAAMC,IAAN,UAAaqG,EAAb,2BAHwB,gBAGvCpG,EAHuC,EAGvCA,KACAsG,EAAqBtG,EAArBsG,iBACR1G,EAAS,CAAEnC,KAAMqE,EAA6B7B,QAASqG,IALR,kDAO/C1G,EAAS,CACPnC,KAAMsE,EACN9B,QACE,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAClC,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAZiC,0DAAf,sDEYvBoG,CAAqB,QAC1BrB,EAAanE,KAAOV,EAAMmG,OAAOlJ,IACnCsC,EAASD,EAAaU,EAAMmG,OAAOlJ,KAEjC4H,GAAgBA,EAAanE,KAAOV,EAAMmG,OAAOlJ,KACnDmF,EAAQyC,EAAaxH,MACrB+H,EAAiBP,EAAalH,eAC9B2H,EAAQT,EAAaQ,MACrBE,EAAUV,EAAa/G,QACvB0H,EAAUX,EAAahH,QACvB4H,GAAaZ,EAAajH,cAE3B,CAAC2B,EAAUS,EAAMmG,OAAOlJ,GAAI4H,IAE/B,IAuGMuB,GAAiB,uCAAG,WAAO5C,GAAP,uBAAAhE,EAAA,6DAClB6G,EAAO7C,EAAEtG,OAAOoJ,MAAM,IACtBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GACzBlB,GAAa,GAJW,SAOhBuB,EAAS,CACbC,QAAS,CACP,eAAgB,wBATE,SAaClH,IAAMoE,KAAK,cAAe0C,EAAUG,GAbrC,gBAad/G,EAbc,EAadA,KAER4F,EAAU5F,GACVwF,GAAa,GAhBS,kDAkBtByB,QAAQC,MAAR,MACA1B,GAAa,GAnBS,0DAAH,sDAuBvB,OACE,qCACE,qBAAKtI,UAAU,YAAf,SACE,uBAAM0G,SAvEO,SAACC,GAClBA,EAAEC,kBAnDqB,WACvB,IAAIC,EAAS,GACTC,GAAc,EA8ClB,OA5CKtG,EAIiB,qBAATA,IACJA,EAAK2C,MAAM,wBACd2D,GAAc,EACdD,EAAM,KAAW,kBANrBC,GAAc,EACdD,EAAM,KAAW,mBAUd7F,IACH8F,GAAc,EACdD,EAAM,OAAa,mBAGhB9F,KACH+F,GAAc,EACdD,EAAM,UAAgB,mBAGnB/F,EAI0B,qBAAlBA,IACJA,EAAcqC,MAAM,aACvB2D,GAAc,EACdD,EAAM,cAAoB,sBAN9BC,GAAc,EACdD,EAAM,cAAoB,mBAUvB2B,IACH1B,GAAc,EACdD,EAAM,KAAW,mBAEd5F,IACH6F,GAAc,EACdD,EAAM,OAAa,mBAGrBd,GAAcc,GACPC,EAIHC,GAiCFkD,MAAM,oBA/B0B,aAA5BC,OAAOC,SAASC,SAClB1H,ETvDgB,SAACkB,EAAO1C,GAAR,8CAAoB,WAAOwB,GAAP,iBAAAC,EAAA,sEAExCD,EAAS,CAAEnC,KAAM+B,IAFuB,SAGjBM,IAAMoE,KAAN,cAA0BpD,GAHT,gBAGhCd,EAHgC,EAGhCA,KACRJ,EAAS,CAAEnC,KAAMgC,EAAmBQ,QAASD,EAAKuH,eAClDnJ,EAAQU,KAAK,KAL2B,kDAOxCc,EAAS,CACPnC,KAAMiC,EACNO,QACE,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAClC,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAZ0B,0DAApB,sDSwDdqH,CACE,CACE9J,OACAM,gBACA0H,OACAvH,SACAD,SACAD,cAEFG,IAIJwB,ETrFmB,SAACtC,EAAIwD,EAAO1C,GAAZ,8CAAwB,WAAOwB,GAAP,iBAAAC,EAAA,sEAE/CD,EAAS,CAAEnC,KAAM4B,IAF8B,SAGxBS,IAAMqE,IAAN,wBAA2B7G,GAAMwD,GAHT,gBAGvCd,EAHuC,EAGvCA,KACRJ,EAAS,CAAEnC,KAAM6B,EAAsBW,QAASD,EAAKyH,eACrDrJ,EAAQU,KAAK,KALkC,kDAO/Cc,EAAS,CACPnC,KAAM8B,EACNU,QACE,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAClC,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAZiC,0DAAxB,sDSsFjBuH,CACExC,EAAanE,IACb,CACErD,OACAM,gBACA0H,OACAvH,SACAD,SACAD,cAEFG,KAyCJ,UACE,iDACA,sBAAKlB,UAAU,aAAf,UACE,gCACE,qDAEF,uBACEA,UAAU,eACVO,KAAK,OACL8G,MAAO7G,EACP8G,SAAU,SAACX,GAAD,OAAOpB,EAAQoB,EAAEtG,OAAOgH,UAEpC,cAAC,EAAD,CAAOpE,QAAS6C,GAAU,UAE5B,sBAAK9F,UAAU,aAAf,UACE,gCACE,uDAEF,uBACEA,UAAU,eACVO,KAAK,OACL8G,MAAOvG,EACPwG,SAAU,SAACX,GAAD,OAAO4B,EAAiB5B,EAAEtG,OAAOgH,UAE7C,uBAAOrH,UAAU,uBAAjB,iCACA,cAAC,EAAD,CAAOiD,QAAS6C,GAAU,mBAE5B,sBAAK9F,UAAU,aAAf,UACE,gCACE,4CAEF,0BACEA,UAAU,eACVqH,MAAOmB,EACPlB,SAAU,SAACX,GAAD,OAAO8B,EAAQ9B,EAAEtG,OAAOgH,UAEpC,cAAC,EAAD,CAAOpE,QAAS6C,GAAU,UAE5B,sBAAK9F,UAAU,aAAf,UACE,gCACE,2DAEF,uBAEA,sBAAKA,UAAU,MAAf,UACGqI,EACC,qBAAKoC,MAAM,eAAe/J,KAAK,SAA/B,SACE,sBAAM+J,MAAM,UAAZ,0BAGF,qBAAKzK,UAAU,WAAWmB,IAAKF,EAAQG,IAAI,KAG7C,sBAAKpB,UAAU,uBAAf,UACE,uBACEO,KAAK,OACLP,UAAU,oBACVI,GAAG,aACHkH,SAAUiC,KAEZ,uBAAOvJ,UAAU,oBAAoBM,QAAQ,aAA7C,+BAKJ,cAAC,EAAD,CAAO2C,QAAS6C,GAAU,YAE5B,sBAAK9F,UAAU,aAAf,UACE,gCACE,qDAEF,cAAC,GAAD,CAEEyH,QAASQ,GAAuB,GAChCP,aAAc1G,EACd2G,aA5Me,SAAC7E,GAC1B,IAAM4H,EAAO5H,EAAKtB,KAAI,SAACoG,GAAD,OAAOA,EAAEC,SAC/Bc,EAAU+B,KAuMI,KAKN,wBAAO1K,UAAU,uBAAjB,+CAEE,qBACEA,UAAU,+BACV2B,QAAS,WACPqH,GAAkB,UAHtB,0BASF,cAAC,EAAD,CAAO/F,QAAS6C,GAAU,YAE5B,sBAAK9F,UAAU,aAAf,UACE,gCACE,wDAEF,cAAC,GAAD,CAEEyH,QAASU,GAA0B,GACnCT,aAAc3G,GACd4G,aA/NkB,SAAC7E,GAC7B,IAAM4H,EAAO5H,EAAKtB,KAAI,SAACoG,GAAD,OAAOA,EAAEC,SAC/Be,GAAa8B,KA0NC,KAKN,wBAAO1K,UAAU,uBAAjB,iDAEE,qBACEA,UAAU,+BACV2B,QAAS,WACPqH,GAAkB,aAHtB,6BASF,cAAC,EAAD,CAAO/F,QAAS6C,GAAU,eAE5B,wBAAQvF,KAAK,SAASP,UAAU,uBAAhC,+BAKJ,cAAC,GAAD,CAAOa,MAAOA,GAAOuE,KAAMA,GAAMC,OAAQA,S,QC3QhCsF,OAnCf,YAAiD,IAAD,EAC5BC,EADEpK,EAA0B,EAA1BA,KAAMgF,EAAoB,EAApBA,OAAQI,EAAY,EAAZA,IAAKF,EAAO,EAAPA,IAGvC,OACE,qBAAK1F,UAAU,kCAAf,SACE,qBAAKA,UAAU,oCAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BQ,GAAQ,SACpC,qBAAIR,UAAU,aAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,iCACE,+CACCwF,GAAU,SAGf,oBAAIxF,UAAU,kBAAd,SACE,iCACE,sDADF,WACqC4F,QADrC,IACqCA,IAAO,SAG9C,oBAAI5F,UAAU,kBAAd,SACE,iCACE,2CADF,YApBM4K,EAqB6BlF,EADnC,EAnBVkF,EAAMC,OAAS,IAAf,UAAwBD,EAAME,UAAU,EAAG,KAA3C,OAAuDF,SAmB7C,QAC2C,oBCU1CG,OA7Bf,YAA+C,IAAnB7J,EAAkB,EAAlBA,QACpBwB,GADsC,EAATS,MAClBC,eAEX4H,EAAa1H,aAAY,SAACC,GAAD,OAAWA,EAAMvC,OAAOgK,cAKvD,OAHAvH,qBAAU,WACRf,ELGsB,eAACgB,EAAD,uDAAW,GAAX,8CAAkB,WAAOhB,GAAP,mBAAAC,EAAA,sEAExCD,EAAS,CAAEnC,KAAMuD,IAFuB,SAGjBlB,IAAMC,IAAN,6BAAgCa,IAHf,gBAGhCZ,EAHgC,EAGhCA,KACA9B,EAAW8B,EAAX9B,OACR0B,EAAS,CAAEnC,KAAMwD,EAAqBhB,QAAS/B,IALP,kDAOxC0B,EAAS,CACPnC,KAAMyD,EACNjB,QACE,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAClC,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAZ0B,0DAAlB,sDKHbgI,CAAW,OACnB,CAACvI,EAAUxB,IAEZ,8BACE,qBAAKlB,UAAU,iBAAf,SACE,qBAAKA,UAAU,MAAf,SACGgL,EAAWxJ,KAAI,SAACE,GACf,OACE,cAAC,GAAD,CAEElB,KAAMkB,EAAMlB,KACZgF,OAAQ9D,EAAM8D,OACdI,IAAKlE,EAAMkE,IACXF,IAAKhE,EAAMgE,KAJNhE,EAAMmC,eCcZqH,OA7Bf,YAAkD,IAAnBhK,EAAkB,EAAlBA,QACvBwB,GADyC,EAATS,MACrBC,eAEX+H,EAAgB7H,aAAY,SAACC,GAAD,OAAWA,EAAMxC,UAAUoK,iBAK7D,OAHA1H,qBAAU,WACRf,ELGyB,eAACgB,EAAD,uDAAW,GAAX,8CAAkB,WAAOhB,GAAP,mBAAAC,EAAA,sEAE3CD,EAAS,CAAEnC,KAAMiE,IAF0B,SAGpB5B,IAAMC,IAAN,gCAAmCa,IAHf,gBAGnCZ,EAHmC,EAGnCA,KACA/B,EAAc+B,EAAd/B,UACR2B,EAAS,CAAEnC,KAAMkE,EAAwB1B,QAAShC,IALP,kDAO3C2B,EAAS,CACPnC,KAAMmE,EACN3B,QACE,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAClC,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAZ6B,0DAAlB,sDKHhBmI,CAAc,OACtB,CAAC1I,EAAUxB,IAEZ,8BACE,qBAAKlB,UAAU,iBAAf,SACE,qBAAKA,UAAU,MAAf,SACGmL,EAAc3J,KAAI,SAACC,GAClB,OACE,cAAC,GAAD,CAEEjB,KAAMiB,EAASjB,KACfgF,OAAQ/D,EAAS+D,OACjBI,IAAKnE,EAASmE,IACdF,IAAKjE,EAASiE,KAJTjE,EAAS4J,gBCsCfC,OAtDf,YAA0C,IAAD,EAAlBpK,EAAkB,EAAlBA,QAASiC,EAAS,EAATA,MACxBT,EAAWU,cACX4E,EAAY,UAAG1E,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOwE,uBAAvC,QAAwD,GAK1E,OAJAvE,qBAAU,WACR,IAAMrD,EAAK+C,EAAMmG,OAAOlJ,GACxBsC,EAASD,EAAarC,MACrB,CAACsC,EAAUxB,IAEZ,gCACE,qBAAKlB,UAAU,MAAf,SACE,qBACEA,UAAU,MACVmB,IAAK6G,EAAa/G,OAClBI,MAAO,CACLC,OAAQ,OACRC,UAAW,QACXgK,SAAU,WACVC,OAAQ,WAId,sBAAKxL,UAAU,+DAAf,UACE,qBACEA,UAAU,GACVmB,IAAK6G,EAAa/G,OAClBI,MAAO,CACLoK,MAAO,oBACPC,OAAQ,kBACRC,UAAW,UAGf,qBAAI3L,UAAU,MAAd,cAAsBgI,EAAaxH,WAErC,sBAAKR,UAAU,YAAf,UACE,oBAAGA,UAAU,UAAb,UACE,uDADF,IACsCgI,EAAalH,iBAEnD,oBAAGd,UAAU,UAAb,UACE,+CACCgI,EAAahH,OAAOQ,KAAI,SAACmB,GAAD,OAAOA,EAAI,UAEtC,oBAAG3C,UAAU,UAAb,UACE,kDAA8B,IAC7BgI,EAAajH,UAAUS,KAAI,SAACmB,GAAD,OAAOA,EAAI,UAEzC,oBAAG3C,UAAU,UAAb,UACE,6CACCgI,EAAaQ,eCzBToD,OAjBf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,iCACE,cAAC,KAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW7I,IACjC,cAAC,KAAD,CAAO2I,KAAK,UAAUC,OAAK,EAACC,UAAWhB,KACvC,cAAC,KAAD,CAAOc,KAAK,aAAaC,OAAK,EAACC,UAAWb,KAC1C,cAAC,KAAD,CAAOW,KAAK,iBAAiBC,OAAK,EAACC,UAAWhE,KAC9C,cAAC,KAAD,CAAO8D,KAAK,YAAYC,OAAK,EAACC,UAAWhE,KACzC,cAAC,KAAD,CAAO8D,KAAK,aAAaC,OAAK,EAACC,UAAWT,QAE5C,cAAC,EAAD,QCTSU,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oDCARQ,GAAUC,2BAAgB,CAC9BlJ,OCO+B,WAAyC,IAAxCD,EAAuC,uDAA/B,CAAEF,WAAY,IAAMsJ,EAAW,uCACvE,OAAQA,EAAOpM,MACb,KAAKsB,EACH,OAAO,6BAAK0B,GAAZ,IAAmBqJ,SAAS,EAAMvJ,WAAY,KAChD,KAAKvB,EACH,OAAO,6BAAKyB,GAAZ,IAAmBqJ,SAAS,EAAOvJ,WAAYsJ,EAAO5J,UACxD,KAAKhB,EACH,MAAO,CAAE6K,SAAS,EAAO5C,MAAO2C,EAAO5J,QAASM,WAAY,IAC9D,KAAKrB,EACH,OAAO,6BAAKuB,GAAZ,IAAmBqJ,SAAS,IAC9B,KAAK3K,EACH,OAAO,6BAAKsB,GAAZ,IAAmBqJ,SAAS,EAAO5E,aAAc2E,EAAO5J,UAC1D,KAAKb,EACH,OAAO,6BAAKqB,GAAZ,IAAmBqJ,SAAS,EAAO5C,MAAO2C,EAAO5J,UACnD,KAAKZ,EACH,OAAO,6BAAKoB,GAAZ,IAAmBqJ,SAAS,IAC9B,KAAKxK,EACH,OAAO,6BAAKmB,GAAZ,IAAmBqJ,SAAS,EAAOrC,aAAcoC,EAAO5J,UAC1D,KAAKV,EACH,OAAO,6BAAKkB,GAAZ,IAAmBqJ,SAAS,EAAO5C,MAAO2C,EAAO5J,UACnD,KAAKT,EACH,OAAO,6BAAKiB,GAAZ,IAAmBqJ,SAAS,IAC9B,KAAKrK,EACH,OAAO,6BAAKgB,GAAZ,IAAmBqJ,SAAS,EAAOvC,aAAcsC,EAAO5J,UAC1D,KAAKP,EACH,OAAO,6BAAKe,GAAZ,IAAmBqJ,SAAS,EAAO5C,MAAO2C,EAAO5J,UACnD,QACE,OAAOQ,IDjCXvC,OEI+B,WAG3B,IAFJuC,EAEG,uDAFK,CAAEyH,WAAY,GAAI9C,eAAgB,GAAI2E,kBAAmB,IACjEF,EACG,uCACH,OAAQA,EAAOpM,MACb,KAAKuD,EACH,OAAO,6BAAKP,GAAZ,IAAmBqJ,SAAS,EAAM5B,WAAY,KAChD,KAAKjH,EACH,OAAO,6BAAKR,GAAZ,IAAmBqJ,SAAS,EAAO5B,WAAY2B,EAAO5J,UACxD,KAAKiB,EACH,OAAO,6BACFT,GADL,IAEEqJ,SAAS,EACT5C,MAAO2C,EAAO5J,QACdiI,WAAY,KAEhB,KAAK/G,EACH,OAAO,6BAAKV,GAAZ,IAAmBqJ,SAAS,EAAM1E,eAAgB,KACpD,KAAKhE,EACH,OAAO,6BAAKX,GAAZ,IAAmBqJ,SAAS,EAAO1E,eAAgByE,EAAO5J,UAC5D,KAAKoB,EACH,OAAO,6BACFZ,GADL,IAEEqJ,SAAS,EACT5C,MAAO2C,EAAO5J,QACdmF,eAAgB,KAEpB,KAAK9D,EACH,OAAO,6BAAKb,GAAZ,IAAmBqJ,SAAS,IAC9B,KAAKvI,EACH,OAAO,6BAAKd,GAAZ,IAAmBqJ,SAAS,EAAOC,kBAAmBF,EAAO5J,UAC/D,KAAKuB,EACH,OAAO,6BAAKf,GAAZ,IAAmBqJ,SAAS,EAAO5C,MAAO2C,EAAO5J,UACnD,KAAKwB,EACH,OAAO,6BACFhB,GADL,IAEE2E,eAAe,GAAD,oBAAM3E,EAAM2E,gBAAZ,aAA+ByE,EAAO5J,YAExD,QACE,OAAOQ,IF1CXxC,UGGkC,WAO9B,IANJwC,EAMG,uDANK,CACN4H,cAAe,GACf/C,kBAAmB,GACnB0E,qBAAsB,IAExBH,EACG,uCACH,OAAQA,EAAOpM,MACb,KAAKiE,EACH,OAAO,6BAAKjB,GAAZ,IAAmBqJ,SAAS,EAAMzB,cAAe,KACnD,KAAK1G,EACH,OAAO,6BAAKlB,GAAZ,IAAmBqJ,SAAS,EAAOzB,cAAewB,EAAO5J,UAC3D,KAAK2B,EACH,OAAO,6BACFnB,GADL,IAEEqJ,SAAS,EACT5C,MAAO2C,EAAO5J,QACdoI,cAAe,KAEnB,KAAKxG,EACH,OAAO,6BAAKpB,GAAZ,IAAmBqJ,SAAS,EAAMxE,kBAAmB,KACvD,KAAKxD,EACH,OAAO,6BAAKrB,GAAZ,IAAmBqJ,SAAS,EAAOxE,kBAAmBuE,EAAO5J,UAC/D,KAAK8B,EACH,OAAO,6BACFtB,GADL,IAEEqJ,SAAS,EACT5C,MAAO2C,EAAO5J,QACdqF,kBAAmB,KAEvB,KAAKtD,EACH,OAAO,6BAAKvB,GAAZ,IAAmBqJ,SAAS,IAC9B,KAAK7H,EACH,OAAO,6BAAKxB,GAAZ,IAAmBqJ,SAAS,EAAOE,qBAAsBH,EAAO5J,UAClE,KAAKiC,EACH,OAAO,6BAAKzB,GAAZ,IAAmBqJ,SAAS,EAAO5C,MAAO2C,EAAO5J,UACnD,KAAKkC,EACH,OAAO,6BACF1B,GADL,IAEE6E,kBAAkB,GAAD,oBAAM7E,EAAM6E,mBAAZ,aAAkCuE,EAAO5J,YAE9D,QACE,OAAOQ,MHzCPwJ,GAAa,CAACC,MAQLC,GANDC,uBACZT,GALmB,GAOnBU,+BAAoBC,mBAAe,WAAf,EAAmBL,MIXzCM,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFM,SAASC,eAAe,SAM1BxB,O","file":"static/js/main.71f0d879.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"navbar navbar-light navbar-expand-md navigation-clean-search\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          IMDB CLONE\r\n        </Link>\r\n        <button\r\n          data-toggle=\"collapse\"\r\n          className=\"navbar-toggler\"\r\n          data-target=\"#navcol-1\"\r\n        >\r\n          <span className=\"sr-only\">Toggle navigation</span>\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navcol-1\">\r\n          <ul className=\"nav navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Movies\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/actors\" className=\"nav-link\">\r\n                Actors\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/producers\" className=\"nav-link\">\r\n                Producers\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"form-inline mr-auto\" target=\"_self\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"search-field\">\r\n                <i className=\"fa fa-search\"></i>\r\n              </label>\r\n              <input\r\n                className=\"form-control search-field\"\r\n                type=\"search\"\r\n                id=\"search-field\"\r\n                name=\"search\"\r\n                disabled\r\n              />\r\n            </div>\r\n          </form>\r\n          <Link\r\n            to=\"/addMovie\"\r\n            className=\"btn btn-light action-button\"\r\n            role=\"button\"\r\n          >\r\n            Add Movie\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"conatiner\">\r\n        <div className=\"row\">\r\n          <div className=\"col text-center py-3\">\r\n            Copyright &copy; IMDB CLONE by veeresh\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction MovieCard({\r\n  id,\r\n  title,\r\n  yearofrelease,\r\n  producers,\r\n  actors,\r\n  poster,\r\n  history,\r\n}) {\r\n  const editHandler = () => {\r\n    history.push(`/editMovie/${id}`);\r\n  };\r\n  return (\r\n    <div className=\"col-md-4 col-lg-3 col-sm-6 my-2\">\r\n      <div className=\"card h-100\">\r\n        <img\r\n          className=\"card-img-top w-100 d-block\"\r\n          src={poster}\r\n          alt=\"Movie Poster\"\r\n          style={{ height: \"150px\", objectFit: \"cover\" }}\r\n        />\r\n        <div className=\"card-body d-flex flex-column\">\r\n          <Link to={`/movie/${id}`}>\r\n            <h4 className=\"card-title\">{title || \"Title\"}</h4>\r\n          </Link>\r\n\r\n          <ul className=\"list-group mb-2\">\r\n            <li className=\"list-group-item\">\r\n              <span>\r\n                <strong>Year of Release : </strong>\r\n                {yearofrelease || \"2020\"}\r\n              </span>\r\n            </li>\r\n            <li className=\"list-group-item ellipsis\">\r\n              <span>\r\n                <strong>Producer : </strong>{\" \"}\r\n                {producers\r\n                  ? producers.map((producer) => producer + \" \")\r\n                  : \"Producer 1, Producer 2\"}\r\n              </span>\r\n            </li>\r\n            <li className=\"list-group-item ellipsis\">\r\n              <span>\r\n                <strong>Actors :</strong>{\" \"}\r\n                {actors\r\n                  ? actors.map((actor) => actor + \" \")\r\n                  : \"Actor 1, Actor 2\"}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n          <button\r\n            className=\"btn btn-primary mt-auto\"\r\n            type=\"button\"\r\n            onClick={editHandler}\r\n          >\r\n            Edit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieCard;\r\n","export const MOVIES_LIST_REQUEST = \"MOVIES_LIST_REQUEST\";\r\nexport const MOVIES_LIST_SUCCESS = \"MOVIES_LIST_SUCCESS\";\r\nexport const MOVIES_LIST_FAILURE = \"MOVIES_LIST_FAILURE\";\r\nexport const GET_MOVIE_BY_ID_REQUEST = \"GET_MOVIE_BY_ID_REQUEST\";\r\nexport const GET_MOVIE_BY_ID_SUCCESS = \"GET_MOVIE_BY_ID_SUCCESS\";\r\nexport const GET_MOVIE_BY_ID_FAILURE = \"GET_MOVIE_BY_ID_FAILURE\";\r\nexport const UPDATE_MOVIE_REQUEST = \"UPDATE_MOVIE_REQUEST\";\r\nexport const UPDATE_MOVIE_SUCCESS = \"UPDATE_MOVIE_SUCCESS\";\r\nexport const UPDATE_MOVIE_FAILURE = \"UPDATE_MOVIE_FAILURE\";\r\nexport const ADD_MOVIE_REQUEST = \"ADD_MOVIE_REQUEST\";\r\nexport const ADD_MOVIE_SUCCESS = \"ADD_MOVIE_SUCCESS\";\r\nexport const ADD_MOVIE_FAILURE = \"ADD_MOVIE_FAILURE\";\r\n","import axios from \"axios\";\r\nimport {\r\n  MOVIES_LIST_FAILURE,\r\n  MOVIES_LIST_REQUEST,\r\n  MOVIES_LIST_SUCCESS,\r\n  GET_MOVIE_BY_ID_REQUEST,\r\n  GET_MOVIE_BY_ID_SUCCESS,\r\n  GET_MOVIE_BY_ID_FAILURE,\r\n  UPDATE_MOVIE_REQUEST,\r\n  UPDATE_MOVIE_SUCCESS,\r\n  UPDATE_MOVIE_FAILURE,\r\n  ADD_MOVIE_REQUEST,\r\n  ADD_MOVIE_SUCCESS,\r\n  ADD_MOVIE_FAILURE,\r\n} from \"./../constants/movieConstants\";\r\n\r\nexport const listMovies = (keyword = \"\") => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MOVIES_LIST_REQUEST });\r\n    const { data } = await axios.get(`api/movies?keyword=${keyword}`);\r\n    const { movies } = data;\r\n    dispatch({ type: MOVIES_LIST_SUCCESS, payload: movies });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MOVIES_LIST_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getMovieById = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: GET_MOVIE_BY_ID_REQUEST });\r\n    const { data } = await axios.get(`../api/movies/${id}`);\r\n    dispatch({ type: GET_MOVIE_BY_ID_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_MOVIE_BY_ID_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateMovie = (id, movie, history) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_MOVIE_REQUEST });\r\n    const { data } = await axios.put(`../api/movies/${id}`, movie);\r\n    dispatch({ type: UPDATE_MOVIE_SUCCESS, payload: data.updatedMovie });\r\n    history.push(\"/\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_MOVIE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const addMovie = (movie, history) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADD_MOVIE_REQUEST });\r\n    const { data } = await axios.post(`/api/movies`, movie);\r\n    dispatch({ type: ADD_MOVIE_SUCCESS, payload: data.createdMovie });\r\n    history.push(\"/\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_MOVIE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport MovieCard from \"../components/MovieCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listMovies } from \"./../actions/movieActions\";\r\n\r\nfunction MovieListScreen({ history, match }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const moviesList = useSelector((state) => state.movies.moviesList);\r\n\r\n  useEffect(() => {\r\n    dispatch(listMovies(\"\"));\r\n  }, [dispatch, history]);\r\n  return (\r\n    <div className=\"my-3\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {moviesList.map((movie) => {\r\n            return (\r\n              <MovieCard\r\n                key={movie._id}\r\n                id={movie._id}\r\n                title={movie.name}\r\n                yearofrelease={movie.yearofrelease}\r\n                producers={movie.producers}\r\n                actors={movie.actors}\r\n                poster={movie.poster}\r\n                history={history}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieListScreen;\r\n","export const ACTORS_LIST_REQUEST = \"ACTORS_LIST_REQUEST\";\r\nexport const ACTORS_LIST_SUCCESS = \"ACTORS_LIST_SUCCESS\";\r\nexport const ACTORS_LIST_FAILURE = \"ACTORS_LIST_FAILURE\";\r\nexport const ACTORS_NAME_LIST_REQUEST = \"ACTORS_NAME_LIST_REQUEST\";\r\nexport const ACTORS_NAME_LIST_SUCCESS = \"ACTORS_NAME_LIST_SUCCESS\";\r\nexport const ACTORS_NAME_LIST_FAILURE = \"ACTORS_NAME_LIST_FAILURE\";\r\nexport const CREATE_ACTOR_REQUEST = \"CREATE_ACTOR_REQUEST\";\r\nexport const CREATE_ACTOR_SUCCESS = \"CREATE_ACTOR_SUCCESS\";\r\nexport const CREATE_ACTOR_FAILURE = \"CREATE_ACTOR_FAILURE\";\r\nexport const ACTORS_NAME_APPEND = \"ACTORS_NAME_APPEND\";\r\n","export const PRODUCERS_LIST_REQUEST = \"PRODUCERS_LIST_REQUEST\";\r\nexport const PRODUCERS_LIST_SUCCESS = \"PRODUCERS_LIST_SUCCESS\";\r\nexport const PRODUCERS_LIST_FAILURE = \"PRODUCERS_LIST_FAILURE\";\r\nexport const PRODUCERS_NAME_LIST_REQUEST = \"PRODUCERS_NAME_LIST_REQUEST\";\r\nexport const PRODUCERS_NAME_LIST_SUCCESS = \"PRODUCERS_NAME_LIST_SUCCESS\";\r\nexport const PRODUCERS_NAME_LIST_FAILURE = \"PRODUCERS_NAME_LIST_FAILURE\";\r\nexport const CREATE_PRODUCER_REQUEST = \"CREATE_PRODUCER_REQUEST\";\r\nexport const CREATE_PRODUCER_SUCCESS = \"CREATE_PRODUCER_SUCCESS\";\r\nexport const CREATE_PRODUCER_FAILURE = \"CREATE_PRODUCER_FAILURE\";\r\nexport const PRODUCERS_NAME_APPEND = \"PRODUCERS_NAME_APPEND\";\r\n","import React from \"react\";\r\n\r\nfunction Alert({ message }) {\r\n  return (\r\n    <>\r\n      {message && (\r\n        <div className=\"alert alert-warning p-1 my-1\" role=\"alert\">\r\n          {message}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createActor, getAllActorsNames } from \"../actions/actorActions\";\r\nimport {\r\n  createProducer,\r\n  getAllProducersNames,\r\n} from \"../actions/producerActions\";\r\nimport Alert from \"./Alert\";\r\n\r\nfunction Modal({ show = false, title, random }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [gender, setGender] = useState(null);\r\n  const [bio, setBio] = useState(\"\");\r\n  const [dob, setDob] = useState();\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const buttonRef = React.useRef(null);\r\n  useEffect(() => {\r\n    if (show) {\r\n      buttonRef.current.click();\r\n    }\r\n  }, [show, title, random]);\r\n  const handleValidation = () => {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n    let dateRegex = /^(((0[1-9]|[12]\\d|3[01])\\/(0[13578]|1[02])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)\\/(0[13456789]|1[012])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])\\/02\\/((19|[2-9]\\d)\\d{2}))|(29\\/02\\/((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/;\r\n    //Name\r\n    if (!name) {\r\n      formIsValid = false;\r\n      errors[\"name\"] = \"Cannot be empty\";\r\n    } else {\r\n      if (typeof name !== \"undefined\") {\r\n        if (!name.match(/^[a-zA-Z\\s\\.]+$/)) {\r\n          formIsValid = false;\r\n          errors[\"name\"] = \"Only letters\";\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!gender) {\r\n      formIsValid = false;\r\n      errors[\"gender\"] = \"Gender cannot be empty\";\r\n    }\r\n\r\n    if (!bio) {\r\n      formIsValid = false;\r\n      errors[\"bio\"] = \"Cannot be empty\";\r\n    }\r\n\r\n    if (!dob) {\r\n      formIsValid = false;\r\n      errors[\"dob\"] = \"Cannot be empty\";\r\n    } else {\r\n      if (typeof dob !== \"undefined\") {\r\n        if (!dob.match(dateRegex)) {\r\n          formIsValid = false;\r\n          errors[\"dob\"] = \"Invalid date entry\";\r\n        }\r\n      }\r\n    }\r\n    setFormErrors(errors);\r\n    return formIsValid;\r\n  };\r\n  const formSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (handleValidation()) {\r\n      const data = { name, gender, dob, bio };\r\n      if (title == \"Actor\") {\r\n        dispatch(createActor(data));\r\n        setName(\"\");\r\n        setGender(null);\r\n        setBio(\"\");\r\n        setDob();\r\n        buttonRef.current.click();\r\n      }\r\n      if (title == \"Producer\") {\r\n        dispatch(createProducer(data));\r\n        setName(\"\");\r\n        setGender(null);\r\n        setBio(\"\");\r\n        setDob();\r\n        buttonRef.current.click();\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"myModal\"\r\n        className=\"modal\"\r\n        tabindex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"myModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">{\"Enter \" + title + \" Details\"}</h4>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">×</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={formSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label>\r\n                    <strong>{\"Name of \" + title} </strong>\r\n                  </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                  <Alert message={formErrors[\"name\"]} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>\r\n                    <strong>Gender</strong>\r\n                  </label>\r\n                  <select\r\n                    className=\"form-select form-control\"\r\n                    aria-label=\"Default select example\"\r\n                    value={gender}\r\n                    onChange={(e) => setGender(e.target.value)}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"male\">male</option>\r\n                    <option value=\"female\">female</option>\r\n                    <option value=\"other\">other</option>\r\n                  </select>\r\n                  <Alert message={formErrors[\"gender\"]} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>\r\n                    <strong>Date of Birth</strong>\r\n                  </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    value={dob}\r\n                    onChange={(e) => setDob(e.target.value)}\r\n                  />\r\n                  <small className=\"form-text text-muted\">\r\n                    format : dd/mm/yyyy\r\n                  </small>\r\n                  <Alert message={formErrors[\"dob\"]} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>\r\n                    <strong>Bio</strong>\r\n                  </label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    value={bio}\r\n                    onChange={(e) => setBio(e.target.value)}\r\n                  ></textarea>\r\n                  <Alert message={formErrors[\"bio\"]} />\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    className=\"btn btn-light\"\r\n                    type=\"button\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"btn btn-primary d-none\"\r\n        data-toggle=\"modal\"\r\n        data-target=\"#myModal\"\r\n        ref={buttonRef}\r\n      >\r\n        open\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import axios from \"axios\";\r\nimport {\r\n  ACTORS_LIST_FAILURE,\r\n  ACTORS_LIST_REQUEST,\r\n  ACTORS_LIST_SUCCESS,\r\n  ACTORS_NAME_LIST_REQUEST,\r\n  ACTORS_NAME_LIST_SUCCESS,\r\n  ACTORS_NAME_LIST_FAILURE,\r\n  CREATE_ACTOR_REQUEST,\r\n  CREATE_ACTOR_FAILURE,\r\n  CREATE_ACTOR_SUCCESS,\r\n  ACTORS_NAME_APPEND,\r\n} from \"./../constants/actorConstants\";\r\n\r\nexport const listActors = (keyword = \"\") => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ACTORS_LIST_REQUEST });\r\n    const { data } = await axios.get(`api/actors?keyword=${keyword}`);\r\n    const { actors } = data;\r\n    dispatch({ type: ACTORS_LIST_SUCCESS, payload: actors });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACTORS_LIST_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const getAllActorsNames = (urlPrefix) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ACTORS_NAME_LIST_REQUEST });\r\n    const { data } = await axios.get(`${urlPrefix}api/actors/nameList`);\r\n    const { allActorNames } = data;\r\n    dispatch({ type: ACTORS_NAME_LIST_SUCCESS, payload: allActorNames });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACTORS_NAME_LIST_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createActor = (actor) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CREATE_ACTOR_REQUEST });\r\n    let { data } = await axios.post(\"/api/actors\");\r\n    const id = data[\"createdActor\"][\"_id\"];\r\n    let updated = await axios.put(`/api/actors/${id}`, actor);\r\n    dispatch({ type: CREATE_ACTOR_SUCCESS, payload: updated.data });\r\n    const name = updated[\"data\"];\r\n    dispatch({ type: ACTORS_NAME_APPEND, payload: [name.updatedActor.name] });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_ACTOR_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  PRODUCERS_LIST_FAILURE,\r\n  PRODUCERS_LIST_REQUEST,\r\n  PRODUCERS_LIST_SUCCESS,\r\n  PRODUCERS_NAME_LIST_FAILURE,\r\n  PRODUCERS_NAME_LIST_REQUEST,\r\n  PRODUCERS_NAME_LIST_SUCCESS,\r\n  CREATE_PRODUCER_REQUEST,\r\n  CREATE_PRODUCER_SUCCESS,\r\n  CREATE_PRODUCER_FAILURE,\r\n  PRODUCERS_NAME_APPEND,\r\n} from \"./../constants/producerConstants\";\r\n\r\nexport const listProducers = (keyword = \"\") => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCERS_LIST_REQUEST });\r\n    const { data } = await axios.get(`api/producers?keyword=${keyword}`);\r\n    const { producers } = data;\r\n    dispatch({ type: PRODUCERS_LIST_SUCCESS, payload: producers });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCERS_LIST_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllProducersNames = (urlPrefix) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCERS_NAME_LIST_REQUEST });\r\n    const { data } = await axios.get(`${urlPrefix}api/producers/nameList`);\r\n    const { allProducerNames } = data;\r\n    dispatch({ type: PRODUCERS_NAME_LIST_SUCCESS, payload: allProducerNames });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCERS_NAME_LIST_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProducer = (producer) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CREATE_PRODUCER_REQUEST });\r\n    let { data } = await axios.post(\"/api/producers\");\r\n    const id = data[\"createdProducer\"][\"_id\"];\r\n    let updated = await axios.put(`/api/producers/${id}`, producer);\r\n    dispatch({ type: CREATE_PRODUCER_SUCCESS, payload: updated.data });\r\n    const name = updated[\"data\"];\r\n    dispatch({\r\n      type: PRODUCERS_NAME_APPEND,\r\n      payload: [name.updatedProducer.name],\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_PRODUCER_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MultiSelect from \"react-multi-select-component\";\r\n\r\nfunction MultiSelectComponent({ options, selectedData, handleChange }) {\r\n  options = options.map((d) => {\r\n    return { label: d, value: d };\r\n  });\r\n\r\n  selectedData = selectedData\r\n    ? selectedData.map((d) => {\r\n        return { label: d, value: d };\r\n      })\r\n    : [];\r\n\r\n  // const [selected, setSelected] = useState([...selectedData]);\r\n\r\n  return (\r\n    <MultiSelect\r\n      options={options}\r\n      value={selectedData}\r\n      onChange={handleChange}\r\n      labelledBy={\"Select\"}\r\n    />\r\n  );\r\n}\r\n\r\nexport default MultiSelectComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"../components/Modal\";\r\nimport MultiSelectComponent from \"../components/MultiSelectComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addMovie, getMovieById, updateMovie } from \"../actions/movieActions\";\r\nimport { getAllActorsNames } from \"../actions/actorActions\";\r\nimport { getAllProducersNames } from \"../actions/producerActions\";\r\nimport Alert from \"../components/Alert\";\r\nimport axios from \"axios\";\r\n\r\nfunction EditScreen({ history, match }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const currentMovie = useSelector((state) => state.movies.currentMovie) ?? \"1\";\r\n\r\n  const completeActorsNames = useSelector(\r\n    (state) => state.actors.actorsNameList\r\n  );\r\n  const completeProducersNames = useSelector(\r\n    (state) => state.producers.producersNameList\r\n  );\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [yearofrelease, setYearofrelease] = useState(\"\");\r\n  const [plot, setPlot] = useState(\"\");\r\n  const [poster, setPoster] = useState(\"\");\r\n  const [actors, setActors] = useState([]);\r\n  const [producers, setProducers] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [random, setRandom] = useState(1);\r\n\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const modalClickHandler = (type) => {\r\n    setRandom(Math.random());\r\n    setShow(true);\r\n    setTitle(type);\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getAllActorsNames(\"../\"));\r\n    dispatch(getAllProducersNames(\"../\"));\r\n    if (currentMovie._id != match.params.id) {\r\n      dispatch(getMovieById(match.params.id));\r\n    }\r\n    if (currentMovie && currentMovie._id == match.params.id) {\r\n      setName(currentMovie.name);\r\n      setYearofrelease(currentMovie.yearofrelease);\r\n      setPlot(currentMovie.plot);\r\n      setPoster(currentMovie.poster);\r\n      setActors(currentMovie.actors);\r\n      setProducers(currentMovie.producers);\r\n    }\r\n  }, [dispatch, match.params.id, currentMovie]);\r\n\r\n  const handleActorsChange = (data) => {\r\n    const list = data.map((d) => d.label);\r\n    setActors(list);\r\n  };\r\n  const handleProducersChange = (data) => {\r\n    const list = data.map((d) => d.label);\r\n    setProducers(list);\r\n  };\r\n  const handleValidation = () => {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n    //Name\r\n    if (!name) {\r\n      formIsValid = false;\r\n      errors[\"name\"] = \"Cannot be empty\";\r\n    } else {\r\n      if (typeof name !== \"undefined\") {\r\n        if (!name.match(/[a-zA-Z]|\\d|\\s|\\.*/)) {\r\n          formIsValid = false;\r\n          errors[\"name\"] = \"Only letters\";\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!actors) {\r\n      formIsValid = false;\r\n      errors[\"actors\"] = \"Cannot be empty\";\r\n    }\r\n\r\n    if (!producers) {\r\n      formIsValid = false;\r\n      errors[\"producers\"] = \"Cannot be empty\";\r\n    }\r\n\r\n    if (!yearofrelease) {\r\n      formIsValid = false;\r\n      errors[\"yearofrelease\"] = \"Cannot be empty\";\r\n    } else {\r\n      if (typeof yearofrelease !== \"undefined\") {\r\n        if (!yearofrelease.match(/^\\d{4}$/)) {\r\n          formIsValid = false;\r\n          errors[\"yearofrelease\"] = \"Enter Valid Year\";\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!plot) {\r\n      formIsValid = false;\r\n      errors[\"plot\"] = \"Cannot be empty\";\r\n    }\r\n    if (!poster) {\r\n      formIsValid = false;\r\n      errors[\"poster\"] = \"Cannot be empty\";\r\n    }\r\n\r\n    setFormErrors(errors);\r\n    return formIsValid;\r\n  };\r\n  const formSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (handleValidation()) {\r\n      // alert(\"Form submitted\");\r\n      if (window.location.pathname == \"/addMovie\") {\r\n        dispatch(\r\n          addMovie(\r\n            {\r\n              name,\r\n              yearofrelease,\r\n              plot,\r\n              poster,\r\n              actors,\r\n              producers,\r\n            },\r\n            history\r\n          )\r\n        );\r\n      } else {\r\n        dispatch(\r\n          updateMovie(\r\n            currentMovie._id,\r\n            {\r\n              name,\r\n              yearofrelease,\r\n              plot,\r\n              poster,\r\n              actors,\r\n              producers,\r\n            },\r\n            history\r\n          )\r\n        );\r\n      }\r\n    } else {\r\n      alert(\"Form has errors.\");\r\n    }\r\n  };\r\n\r\n  // const handleImageUpload = (e) => {\r\n  //   const selectedFile = e.target.files[0];\r\n  //   const objectUrl = URL.createObjectURL(selectedFile);\r\n  //   setPoster(objectUrl);\r\n  // };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n\r\n      setPoster(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <form onSubmit={formSubmit}>\r\n          <h1>Edit/Add movie </h1>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <strong>Name of Movie</strong>\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <Alert message={formErrors[\"name\"]} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <strong>Year of Release</strong>\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={yearofrelease}\r\n              onChange={(e) => setYearofrelease(e.target.value)}\r\n            />\r\n            <small className=\"form-text text-muted\">format : dd/mm/yyyy</small>\r\n            <Alert message={formErrors[\"yearofrelease\"]} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <strong>Plot</strong>\r\n            </label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              value={plot}\r\n              onChange={(e) => setPlot(e.target.value)}\r\n            ></textarea>\r\n            <Alert message={formErrors[\"plot\"]} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <strong>Upload Poster Image</strong>\r\n            </label>\r\n            <br />\r\n            {/* {poster} */}\r\n            <div className=\"row\">\r\n              {uploading ? (\r\n                <div class=\"spinner-grow\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n              ) : (\r\n                <img className=\"col-md-3\" src={poster} alt=\"\" />\r\n              )}\r\n\r\n              <div className=\"col-md-9 custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  id=\"customFile\"\r\n                  onChange={uploadFileHandler}\r\n                />\r\n                <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                  Choose file\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <Alert message={formErrors[\"poster\"]} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <strong>Select Actors</strong>\r\n            </label>\r\n            <MultiSelectComponent\r\n              key=\"1\"\r\n              options={completeActorsNames || []}\r\n              selectedData={actors}\r\n              handleChange={handleActorsChange}\r\n            />\r\n            <small className=\"form-text text-muted\">\r\n              Want to add new Actor ? click &nbsp;\r\n              <div\r\n                className=\"btn btn-outline-light btn-sm\"\r\n                onClick={() => {\r\n                  modalClickHandler(\"Actor\");\r\n                }}\r\n              >\r\n                Add Actor\r\n              </div>\r\n            </small>\r\n            <Alert message={formErrors[\"actors\"]} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <strong>Select Producers</strong>\r\n            </label>\r\n            <MultiSelectComponent\r\n              key=\"2\"\r\n              options={completeProducersNames || []}\r\n              selectedData={producers}\r\n              handleChange={handleProducersChange}\r\n            />\r\n            <small className=\"form-text text-muted\">\r\n              Want to add new Producer? click &nbsp;\r\n              <div\r\n                className=\"btn btn-outline-light btn-sm\"\r\n                onClick={() => {\r\n                  modalClickHandler(\"Producer\");\r\n                }}\r\n              >\r\n                Add Producer\r\n              </div>\r\n            </small>\r\n            <Alert message={formErrors[\"producers\"]} />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary mt-2\">\r\n            Save Changes\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <Modal title={title} show={show} random={random} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditScreen;\r\n","import React from \"react\";\r\n\r\nfunction PersonCard({ name, gender, dob, bio }) {\r\n  const truncate = (input) =>\r\n    input.length > 100 ? `${input.substring(0, 100)}...` : input;\r\n  return (\r\n    <div className=\"col-md-4 col-lg-3 col-sm-6 my-2\">\r\n      <div className=\"card h-100 bg-secondary text-dark\">\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">{name || \"Name\"}</h4>\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n              <span>\r\n                <strong>Gender : </strong>\r\n                {gender || \"-\"}\r\n              </span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span>\r\n                <strong>Date of Birth : </strong> {dob ?? \"-\"}\r\n              </span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span>\r\n                <strong>Bio :</strong> {truncate(bio) ?? \"-\"}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n          {/* <button className=\"btn btn-primary mt-3\" type=\"button\">\r\n        Edit\r\n      </button> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonCard;\r\n","import React, { useEffect } from \"react\";\r\nimport PersonCard from \"../components/PersonCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listActors } from \"./../actions/actorActions\";\r\n\r\nfunction ActorsListScreen({ history, match }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const actorsList = useSelector((state) => state.actors.actorsList);\r\n\r\n  useEffect(() => {\r\n    dispatch(listActors(\"\"));\r\n  }, [dispatch, history]);\r\n  return (\r\n    <div>\r\n      <div className=\"container my-3\">\r\n        <div className=\"row\">\r\n          {actorsList.map((actor) => {\r\n            return (\r\n              <PersonCard\r\n                key={actor._id}\r\n                name={actor.name}\r\n                gender={actor.gender}\r\n                dob={actor.dob}\r\n                bio={actor.bio}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActorsListScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport PersonCard from \"../components/PersonCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducers } from \"./../actions/producerActions\";\r\n\r\nfunction ProducersListScreen({ history, match }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const producersList = useSelector((state) => state.producers.producersList);\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducers(\"\"));\r\n  }, [dispatch, history]);\r\n  return (\r\n    <div>\r\n      <div className=\"container my-3\">\r\n        <div className=\"row\">\r\n          {producersList.map((producer) => {\r\n            return (\r\n              <PersonCard\r\n                key={producer._key}\r\n                name={producer.name}\r\n                gender={producer.gender}\r\n                dob={producer.dob}\r\n                bio={producer.bio}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProducersListScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getMovieById } from \"../actions/movieActions\";\r\n\r\nfunction MovieScreen({ history, match }) {\r\n  const dispatch = useDispatch();\r\n  const currentMovie = useSelector((state) => state.movies.currentMovie) ?? {};\r\n  useEffect(() => {\r\n    const id = match.params.id;\r\n    dispatch(getMovieById(id));\r\n  }, [dispatch, history]);\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <img\r\n          className=\"col\"\r\n          src={currentMovie.poster}\r\n          style={{\r\n            height: \"20vh\",\r\n            objectFit: \"cover\",\r\n            position: \"absolute\",\r\n            zIndex: \"-10\",\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"d-flex justify-content-center flex-column align-items-center\">\r\n        <img\r\n          className=\"\"\r\n          src={currentMovie.poster}\r\n          style={{\r\n            width: \"max(20vw , 300px)\",\r\n            border: \"5px solid white\",\r\n            marginTop: \"10vh\",\r\n          }}\r\n        />\r\n        <h1 className=\"p-2\"> {currentMovie.name}</h1>\r\n      </div>\r\n      <div className=\"container\">\r\n        <p className=\"m-2 p-2\">\r\n          <strong>Year of Release :</strong> {currentMovie.yearofrelease}\r\n        </p>\r\n        <p className=\"m-2 p-2\">\r\n          <strong>Actors : </strong>\r\n          {currentMovie.actors.map((a) => a + \" \")}\r\n        </p>\r\n        <p className=\"m-2 p-2\">\r\n          <strong>Producers : </strong>{\" \"}\r\n          {currentMovie.producers.map((a) => a + \" \")}\r\n        </p>\r\n        <p className=\"m-2 p-2\">\r\n          <strong>Plot : </strong>\r\n          {currentMovie.plot}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieScreen;\r\n","import Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport MovieListScreen from \"./screens/MovieListScreen\";\nimport EditScreen from \"./screens/EditScreen\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ActorsListScreen from \"./screens/ActorsListScreen\";\nimport ProducersListScreen from \"./screens/ProducersListScreen\";\nimport MovieScreen from \"./screens/MovieScreen\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main>\n        <Route path=\"/\" exact component={MovieListScreen} />\n        <Route path=\"/actors\" exact component={ActorsListScreen} />\n        <Route path=\"/producers\" exact component={ProducersListScreen} />\n        <Route path=\"/editMovie/:id\" exact component={EditScreen} />\n        <Route path=\"/addMovie\" exact component={EditScreen} />\n        <Route path=\"/movie/:id\" exact component={MovieScreen} />\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { moviesListReducer } from \"./reducers/movieReducer\";\r\nimport { actorsListReducer } from \"./reducers/actorReducer\";\r\nimport { producersListReducer } from \"./reducers/producerReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  movies: moviesListReducer,\r\n  actors: actorsListReducer,\r\n  producers: producersListReducer,\r\n});\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  MOVIES_LIST_REQUEST,\r\n  MOVIES_LIST_SUCCESS,\r\n  MOVIES_LIST_FAILURE,\r\n  GET_MOVIE_BY_ID_REQUEST,\r\n  GET_MOVIE_BY_ID_FAILURE,\r\n  GET_MOVIE_BY_ID_SUCCESS,\r\n  UPDATE_MOVIE_REQUEST,\r\n  UPDATE_MOVIE_SUCCESS,\r\n  UPDATE_MOVIE_FAILURE,\r\n  ADD_MOVIE_REQUEST,\r\n  ADD_MOVIE_SUCCESS,\r\n  ADD_MOVIE_FAILURE,\r\n} from \"./../constants/movieConstants\";\r\n\r\nexport const moviesListReducer = (state = { moviesList: [] }, action) => {\r\n  switch (action.type) {\r\n    case MOVIES_LIST_REQUEST:\r\n      return { ...state, loading: true, moviesList: [] };\r\n    case MOVIES_LIST_SUCCESS:\r\n      return { ...state, loading: false, moviesList: action.payload };\r\n    case MOVIES_LIST_FAILURE:\r\n      return { loading: false, error: action.payload, moviesList: [] };\r\n    case GET_MOVIE_BY_ID_REQUEST:\r\n      return { ...state, loading: true };\r\n    case GET_MOVIE_BY_ID_SUCCESS:\r\n      return { ...state, loading: false, currentMovie: action.payload };\r\n    case GET_MOVIE_BY_ID_FAILURE:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case UPDATE_MOVIE_REQUEST:\r\n      return { ...state, loading: true };\r\n    case UPDATE_MOVIE_SUCCESS:\r\n      return { ...state, loading: false, updatedMovie: action.payload };\r\n    case UPDATE_MOVIE_FAILURE:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case ADD_MOVIE_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ADD_MOVIE_SUCCESS:\r\n      return { ...state, loading: false, createdMovie: action.payload };\r\n    case ADD_MOVIE_FAILURE:\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ACTORS_LIST_REQUEST,\r\n  ACTORS_LIST_SUCCESS,\r\n  ACTORS_LIST_FAILURE,\r\n  ACTORS_NAME_LIST_REQUEST,\r\n  ACTORS_NAME_LIST_SUCCESS,\r\n  ACTORS_NAME_LIST_FAILURE,\r\n  CREATE_ACTOR_REQUEST,\r\n  CREATE_ACTOR_SUCCESS,\r\n  CREATE_ACTOR_FAILURE,\r\n  ACTORS_NAME_APPEND,\r\n} from \"./../constants/actorConstants\";\r\n\r\nexport const actorsListReducer = (\r\n  state = { actorsList: [], actorsNameList: [], newlyCreatedActor: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ACTORS_LIST_REQUEST:\r\n      return { ...state, loading: true, actorsList: [] };\r\n    case ACTORS_LIST_SUCCESS:\r\n      return { ...state, loading: false, actorsList: action.payload };\r\n    case ACTORS_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        actorsList: [],\r\n      };\r\n    case ACTORS_NAME_LIST_REQUEST:\r\n      return { ...state, loading: true, actorsNameList: [] };\r\n    case ACTORS_NAME_LIST_SUCCESS:\r\n      return { ...state, loading: false, actorsNameList: action.payload };\r\n    case ACTORS_NAME_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        actorsNameList: [],\r\n      };\r\n    case CREATE_ACTOR_REQUEST:\r\n      return { ...state, loading: true };\r\n    case CREATE_ACTOR_SUCCESS:\r\n      return { ...state, loading: false, newlyCreatedActor: action.payload };\r\n    case CREATE_ACTOR_FAILURE:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case ACTORS_NAME_APPEND:\r\n      return {\r\n        ...state,\r\n        actorsNameList: [...state.actorsNameList, ...action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  PRODUCERS_LIST_REQUEST,\r\n  PRODUCERS_LIST_SUCCESS,\r\n  PRODUCERS_LIST_FAILURE,\r\n  PRODUCERS_NAME_LIST_REQUEST,\r\n  PRODUCERS_NAME_LIST_SUCCESS,\r\n  PRODUCERS_NAME_LIST_FAILURE,\r\n  CREATE_PRODUCER_REQUEST,\r\n  CREATE_PRODUCER_SUCCESS,\r\n  CREATE_PRODUCER_FAILURE,\r\n  PRODUCERS_NAME_APPEND,\r\n} from \"./../constants/producerConstants\";\r\n\r\nexport const producersListReducer = (\r\n  state = {\r\n    producersList: [],\r\n    producersNameList: [],\r\n    newlyCreatedProducer: {},\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCERS_LIST_REQUEST:\r\n      return { ...state, loading: true, producersList: [] };\r\n    case PRODUCERS_LIST_SUCCESS:\r\n      return { ...state, loading: false, producersList: action.payload };\r\n    case PRODUCERS_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        producersList: [],\r\n      };\r\n    case PRODUCERS_NAME_LIST_REQUEST:\r\n      return { ...state, loading: true, producersNameList: [] };\r\n    case PRODUCERS_NAME_LIST_SUCCESS:\r\n      return { ...state, loading: false, producersNameList: action.payload };\r\n    case PRODUCERS_NAME_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        producersNameList: [],\r\n      };\r\n    case CREATE_PRODUCER_REQUEST:\r\n      return { ...state, loading: true };\r\n    case CREATE_PRODUCER_SUCCESS:\r\n      return { ...state, loading: false, newlyCreatedProducer: action.payload };\r\n    case CREATE_PRODUCER_FAILURE:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case PRODUCERS_NAME_APPEND:\r\n      return {\r\n        ...state,\r\n        producersNameList: [...state.producersNameList, ...action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles.min.css?h=7750cb04ef0e28f275df6d6634213046\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}